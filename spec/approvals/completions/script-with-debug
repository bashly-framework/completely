# completely completion                                    -*- shell-script -*-

# This bash completions script was generated by
# completely (https://github.com/bashly-framework/completely)
# Modifying it manually is not recommended

_completely_completions_filter() {
  local words="$1"
  local cur=${COMP_WORDS[COMP_CWORD]}
  local result=()

  # words the user already typed (excluding the command itself)
  local used=("${COMP_WORDS[@]:1:$((COMP_CWORD - 1))}")

  if [[ "${cur:0:1}" == "-" ]]; then
    # Completing an option: offer everything (including options)
    echo "$words"

  else
    # Completing a non-option: offer only non-options,
    # and don't re-offer ones already used earlier in the line.
    for word in $words; do
      [[ "${word:0:1}" == "-" ]] && continue

      local seen=0
      for u in "${used[@]}"; do
        if [[ "$u" == "$word" ]]; then
          seen=1
          break
        fi
      done
      ((!seen)) && result+=("$word")
    done

    echo "${result[*]}"
  fi
}

_completely_completions() {
  local cur=${COMP_WORDS[COMP_CWORD]}
  local compwords=("${COMP_WORDS[@]:1:$COMP_CWORD-1}")
  local compline="${compwords[*]}"

  if [[ -n "$COMPLETELY_DEBUG" ]]; then
    echo "compline: '$compline'" > 'completely-debug.txt'
    echo "cur:      '$cur'" >> 'completely-debug.txt'
  fi

  ...